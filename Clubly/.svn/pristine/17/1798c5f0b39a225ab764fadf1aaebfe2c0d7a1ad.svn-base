using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data.Objects.DataClasses;
using System.Collections;


namespace Web.Models
{
    public class SocioXActividad
    {
        //public static List<string> Estados =(new List<string>()).Add("Inactivo").Add("Activo");//{"String",""};

        [Display(Name = "Id Socio")]
        public short idSocio { get; set; }

        [Required]
        [Display(Name = "Id Actividad")]
        public short idActividad { get; set; }

        //[Display(Name = "Id Pago")]
        //public short idPago { get; set; }

        [Display(Name = "Hora Ingreso")]
        public string horaIngreso { get; set; }

        [Display(Name = "Estado")]
        public short estado { get; set; }

        [Required]
        [Display(Name = "Actividad")]
        public Actividad Actividad { get; set; }

        [Required]
        [Display(Name = "Socio")]
        public Socio Socio { get; set; }

        public SocioXActividad(Datos.SocioXActividad socioXActividad) 
        {
            try
            {
                idSocio = socioXActividad.idSocio;
                idActividad = socioXActividad.idActividad;
                //idPago = socioXActividad.Pago.id;
                horaIngreso = socioXActividad.horaIngreso.ToString();
                estado = socioXActividad.estado;
                Socio = Socio.Convertir(socioXActividad.Socio);
                Actividad = Actividad.Convertir(socioXActividad.Actividad);
            }
            catch (Exception e)
            {
                System.Diagnostics.Debug.WriteLine("{0} Exception caught.", e);
            }
        }

        //Convierte lista de socioxActividades de Datos a Models
        public static IEnumerable<SocioXActividad> ConvertirLista(IEnumerable<Datos.SocioXActividad> listaSocioXActividad)
        {
            return listaSocioXActividad.Select(socioXActividad => new Models.SocioXActividad(socioXActividad));
        }


        public static EntityCollection<Datos.SocioXActividad> InvertirLista(IEnumerable<SocioXActividad> mListaSocioXActividad)
        {
            EntityCollection<Datos.SocioXActividad> listaSocioXActividad = new EntityCollection<Datos.SocioXActividad>();

            int count = mListaSocioXActividad.ToList().Count;
            for (int i = 0; i < count; i++)
            {
                listaSocioXActividad.Add(Invertir(mListaSocioXActividad.ToList()[i]));
            }

            return listaSocioXActividad;
        }

        
        public static Datos.SocioXActividad Invertir(Models.SocioXActividad sxa)
        {
            Datos.SocioXActividad socioXActividad = new Datos.SocioXActividad();

            socioXActividad.idSocio = sxa.idSocio;
            socioXActividad.idActividad = sxa.idActividad;
            //socioXActividad.Pago.id = sxa.idPago;
            socioXActividad.horaIngreso =  TimeSpan.Parse(sxa.horaIngreso);
            socioXActividad.estado = sxa.estado;
            socioXActividad.Actividad = Actividad.Invertir(sxa.Actividad);
            socioXActividad.Socio = Socio.Invertir(sxa.Socio);
            return socioXActividad;
        }

        //Seleccionar todo SocioXActividad
        public static IEnumerable<Models.SocioXActividad> SeleccionarTodo()
        {
            return ConvertirLista(Negocio.SocioXActividad.seleccionarTodo());
        }

        public static IEnumerable<SocioXActividad> BuscarIdFamilia(short id)
        {
            return ConvertirLista(Negocio.SocioXActividad.BuscarIdFamilia(id));
        }
    }
}
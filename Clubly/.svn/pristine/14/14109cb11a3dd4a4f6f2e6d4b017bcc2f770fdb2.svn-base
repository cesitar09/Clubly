using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Datos;
using System.Collections;
namespace Negocio
{
    public class Proveedor
    {
        static Entities ctx = null;
        public static Entities context()
        {
            if (ctx == null)
                ctx = new Entities();
            return ctx;
        }

        public static IQueryable<Datos.Proveedor> seleccionarTodo()
        {
            IQueryable<Datos.Proveedor> listaProveedores = context().Proveedor.Where(p => p.estado == 1);
            return listaProveedores;
        }

        public static Datos.Proveedor buscarId(short id)
        {
            return context().Proveedor.Single(p => p.id == id);
        }


        public static void crear(Datos.Proveedor proveedor)
        {
            Datos.Proveedor nuevoProveedor = new Datos.Proveedor();

            nuevoProveedor.nombre = proveedor.nombre;
            nuevoProveedor.ruc = proveedor.ruc;
            nuevoProveedor.direccion = proveedor.direccion;
            nuevoProveedor.estado = proveedor.estado;

            context().Proveedor.AddObject(nuevoProveedor);
            context().SaveChanges();
        }

        public static void modificar(Datos.Proveedor proveedor)
        {
            Datos.Proveedor s = context().Proveedor.Single(p => p.id == proveedor.id);

            s.nombre = proveedor.nombre;
            s.ruc = proveedor.ruc;
            s.direccion = proveedor.direccion;
            s.estado = proveedor.estado;

            context().Proveedor.ApplyCurrentValues(s);
            context().SaveChanges();
        }

        public static void eliminar(Datos.Proveedor proveedor)
        {
            Datos.Proveedor proveedor_eliminado = context().Proveedor.Single(p => p.id == proveedor.id);
            proveedor_eliminado.estado = 0;
            modificar(proveedor_eliminado);
        }    
    }
}

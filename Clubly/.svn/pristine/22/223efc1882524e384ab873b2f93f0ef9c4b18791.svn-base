using System;
using System.Collections.Generic;
using System.Linq;
using System.Data.Linq;
using System.Web;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel;
using System.Web.Mvc;
using System.Data.Objects.DataClasses;
using Datos;

namespace Web.Models
{
    public class Concesionario
    {
        [DisplayName("Id")]
        public short id { get; set; }

        [Required]
        [DisplayName("RUC")]
        public string ruc { get; set; }

        [Required]
        [DisplayName("Nombre")]
        public string nombre { get; set; }

        [Required]
        [DisplayName("Dirección")]
        public string direccion { get; set; }

        [Required]
        [DisplayName("Estado")]
        public short estado { get; set; }

        [Required]
        [DisplayName("Sedes")]
        public IEnumerable<Models.Sede> sedes { get; set; }

        public Concesionario()
        {
        }

        public Concesionario(Datos.Concesionario concesionario)
        {
            id = concesionario.id;
            ruc = concesionario.ruc;
            nombre = concesionario.nombre;
            direccion = concesionario.direccion;
            estado = concesionario.estado;
            sedes = Sede.ConvertirLista(concesionario.Sede);
        }

        public static Concesionario Convertir(Datos.Concesionario concesionario)
        {
            return new Concesionario(concesionario);
        }

        public static Datos.Concesionario ConvertirInverso(Models.Concesionario mConcesionario)
        {
            Datos.Concesionario dConcesionario = new Datos.Concesionario();
            dConcesionario.id = mConcesionario.id;
            dConcesionario.ruc = mConcesionario.ruc;
            dConcesionario.nombre = mConcesionario.nombre;
            dConcesionario.direccion = mConcesionario.direccion;
            //foreach (Datos.Sede sede in Negocio.Sede.seleccionarTodo())
            //{
            //    dConcesionario.Sede.Add(sede);
            //    sede.Concesionario.Add(dConcesionario);
            //}
            dConcesionario.estado = mConcesionario.estado;
            return dConcesionario;
        }

        public static IEnumerable<Concesionario> ConvertirLista(IEnumerable<Datos.Concesionario> concesionarios)
        {
            return concesionarios.Select(concesionario => Convertir(concesionario));
        }

        public static IEnumerable<Concesionario> SeleccionarTodo()
        {
            IEnumerable<Datos.Concesionario> concesionario = Negocio.Concesionario.seleccionarTodo();
            return ConvertirLista(concesionario);
        }

        public static Concesionario buscarId(short id)
        {
            Datos.Concesionario concesionario = Negocio.Concesionario.buscarId(id);
            return Convertir(concesionario);
        }

        public static void modificar(Models.Concesionario concesionario)
        {
            Negocio.Concesionario.modificar(ConvertirInverso(concesionario));
        }

        public static void insertar(Models.Concesionario concesionario)
        {
            Negocio.Concesionario.insertar(ConvertirInverso(concesionario));
        }

        public static void eliminar(Models.Concesionario concesionario)
        {
            Negocio.Concesionario.eliminar(ConvertirInverso(concesionario));
        }
    }
}